{"ast":null,"code":"var _jsxFileName = \"/Users/wanting.kee/Documents/jsqr-react-demo/src/App.js\";\nimport \"./App.css\";\nimport React from \"react\";\nimport jsQR from \"jsqr\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nclass App extends React.Component {\n  constructor(props) {\n    super(props);\n    this.canvasElement = /*#__PURE__*/React.createRef(); // TODO move from ref to state\n\n    this.loadingMessage = /*#__PURE__*/React.createRef();\n    this.output = /*#__PURE__*/React.createRef();\n    this.outputData = /*#__PURE__*/React.createRef();\n    this.state = {\n      loadingMessageHidden: true,\n      loadingMessage: \"ðŸŽ¥ Unable to access video stream (please make sure you have a webcam enabled)\",\n      canvasElementHidden: true,\n      outputContainterHidden: true,\n      outputMessage: \"No QR code detected.\"\n    };\n  }\n\n  componentDidMount() {\n    var canvas = this.canvasElement.current.getContext(\"2d\");\n    var video = document.createElement(\"video\"); // Use facingMode: environment to attemt to get the front camera on phones\n\n    function drawLine(begin, end, color) {\n      canvas.beginPath();\n      canvas.moveTo(begin.x, begin.y);\n      canvas.lineTo(end.x, end.y);\n      canvas.lineWidth = 4;\n      canvas.strokeStyle = color;\n      canvas.stroke();\n    }\n\n    navigator.mediaDevices.getUserMedia({\n      video: {\n        facingMode: \"environment\"\n      }\n    }).then(function (stream) {\n      video.srcObject = stream;\n      video.setAttribute(\"playsinline\", true); // required to tell iOS safari we don't want fullscreen\n\n      video.play();\n      requestAnimationFrame(tick);\n    });\n    const canvasElement = this.canvasElement.current;\n    const that = this;\n\n    function tick() {\n      that.setState({\n        loadingMessage: \"âŒ› Loading video...\"\n      });\n\n      if (video.readyState === video.HAVE_ENOUGH_DATA) {\n        canvasElement.hidden = false;\n        that.setState({\n          loadingMessageHidden: true,\n          outputContainterHidden: false\n        }); // draw video feed on the canvas\n\n        canvasElement.height = video.videoHeight;\n        canvasElement.width = video.videoWidth;\n        canvas.drawImage(video, 0, 0, canvasElement.width, canvasElement.height); // pull image from the canvas\n        // want the canvas image version so that can draw red bounding box over QR code correctly\n\n        var imageData = canvas.getImageData(0, 0, canvasElement.width, canvasElement.height);\n        var code = jsQR(imageData.data, imageData.width, imageData.height, {\n          inversionAttempts: \"dontInvert\"\n        });\n\n        if (code) {\n          // draw bounding box around QR code\n          drawLine(code.location.topLeftCorner, code.location.topRightCorner, \"#FF3B58\");\n          drawLine(code.location.topRightCorner, code.location.bottomRightCorner, \"#FF3B58\");\n          drawLine(code.location.bottomRightCorner, code.location.bottomLeftCorner, \"#FF3B58\");\n          drawLine(code.location.bottomLeftCorner, code.location.topLeftCorner, \"#FF3B58\");\n          that.setState({\n            outputMessageHidden: true\n          });\n        } else {}\n      }\n\n      requestAnimationFrame(tick);\n    }\n  }\n\n  render() {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"App\",\n      children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n        children: \"jsQR Demo\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 118,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"a\", {\n        id: \"githubLink\",\n        href: \"https://github.com/cozmo/jsQR\",\n        children: \"View documentation on Github\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 119,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: \"Pure JavaScript QR code decoding library.\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 122,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        id: \"loadingMessage\",\n        hidden: this.state.loadingMessageHidden,\n        children: this.state.loadingMessage\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 123,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"canvas\", {\n        ref: this.canvasElement,\n        id: \"canvas\",\n        hidden: true\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 124,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        id: \"output\",\n        children: this.state.outputData ? /*#__PURE__*/_jsxDEV(\"div\", {\n          children: [/*#__PURE__*/_jsxDEV(\"b\", {\n            children: \"Data:\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 128,\n            columnNumber: 15\n          }, this), \" \", /*#__PURE__*/_jsxDEV(\"span\", {\n            id: \"outputData\",\n            children: this.state.outputData\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 128,\n            columnNumber: 28\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 127,\n          columnNumber: 13\n        }, this) : /*#__PURE__*/_jsxDEV(\"div\", {\n          id: \"outputMessage\",\n          children: \"No QR code detected.\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 131,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 125,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 117,\n      columnNumber: 7\n    }, this);\n  }\n\n}\n\nexport default App;","map":{"version":3,"sources":["/Users/wanting.kee/Documents/jsqr-react-demo/src/App.js"],"names":["React","jsQR","App","Component","constructor","props","canvasElement","createRef","loadingMessage","output","outputData","state","loadingMessageHidden","canvasElementHidden","outputContainterHidden","outputMessage","componentDidMount","canvas","current","getContext","video","document","createElement","drawLine","begin","end","color","beginPath","moveTo","x","y","lineTo","lineWidth","strokeStyle","stroke","navigator","mediaDevices","getUserMedia","facingMode","then","stream","srcObject","setAttribute","play","requestAnimationFrame","tick","that","setState","readyState","HAVE_ENOUGH_DATA","hidden","height","videoHeight","width","videoWidth","drawImage","imageData","getImageData","code","data","inversionAttempts","location","topLeftCorner","topRightCorner","bottomRightCorner","bottomLeftCorner","outputMessageHidden","render"],"mappings":"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","sourcesContent":["import \"./App.css\";\nimport React from \"react\";\n\nimport jsQR from \"jsqr\";\n\nclass App extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.canvasElement = React.createRef();\n    // TODO move from ref to state\n    this.loadingMessage = React.createRef();\n    this.output = React.createRef();\n    this.outputData = React.createRef();\n\n    this.state = {\n      loadingMessageHidden: true,\n      loadingMessage:\n        \"ðŸŽ¥ Unable to access video stream (please make sure you have a webcam enabled)\",\n      canvasElementHidden: true,\n      outputContainterHidden: true,\n      outputMessage: \"No QR code detected.\",\n    };\n  }\n\n  componentDidMount() {\n    var canvas = this.canvasElement.current.getContext(\"2d\");\n    var video = document.createElement(\"video\");\n    // Use facingMode: environment to attemt to get the front camera on phones\n\n    function drawLine(begin, end, color) {\n      canvas.beginPath();\n      canvas.moveTo(begin.x, begin.y);\n      canvas.lineTo(end.x, end.y);\n      canvas.lineWidth = 4;\n      canvas.strokeStyle = color;\n      canvas.stroke();\n    }\n\n    navigator.mediaDevices\n      .getUserMedia({ video: { facingMode: \"environment\" } })\n      .then(function (stream) {\n        video.srcObject = stream;\n        video.setAttribute(\"playsinline\", true); // required to tell iOS safari we don't want fullscreen\n        video.play();\n        requestAnimationFrame(tick);\n      });\n\n    const canvasElement = this.canvasElement.current;\n\n    const that = this;\n    function tick() {\n      that.setState({ loadingMessage: \"âŒ› Loading video...\" });\n      if (video.readyState === video.HAVE_ENOUGH_DATA) {\n        canvasElement.hidden = false;\n        that.setState({\n          loadingMessageHidden: true,\n          outputContainterHidden: false,\n        });\n\n        // draw video feed on the canvas\n        canvasElement.height = video.videoHeight;\n        canvasElement.width = video.videoWidth;\n        canvas.drawImage(\n          video,\n          0,\n          0,\n          canvasElement.width,\n          canvasElement.height\n        );\n\n        // pull image from the canvas\n        // want the canvas image version so that can draw red bounding box over QR code correctly\n        var imageData = canvas.getImageData(\n          0,\n          0,\n          canvasElement.width,\n          canvasElement.height\n        );\n        var code = jsQR(imageData.data, imageData.width, imageData.height, {\n          inversionAttempts: \"dontInvert\",\n        });\n        if (code) {\n          // draw bounding box around QR code\n          drawLine(\n            code.location.topLeftCorner,\n            code.location.topRightCorner,\n            \"#FF3B58\"\n          );\n          drawLine(\n            code.location.topRightCorner,\n            code.location.bottomRightCorner,\n            \"#FF3B58\"\n          );\n          drawLine(\n            code.location.bottomRightCorner,\n            code.location.bottomLeftCorner,\n            \"#FF3B58\"\n          );\n          drawLine(\n            code.location.bottomLeftCorner,\n            code.location.topLeftCorner,\n            \"#FF3B58\"\n          );\n          that.setState({\n            outputMessageHidden: true,\n          });\n        } else {\n        }\n      }\n      requestAnimationFrame(tick);\n    }\n  }\n\n  render() {\n    return (\n      <div className=\"App\">\n        <h1>jsQR Demo</h1>\n        <a id=\"githubLink\" href=\"https://github.com/cozmo/jsQR\">\n          View documentation on Github\n        </a>\n        <p>Pure JavaScript QR code decoding library.</p>\n        <div id=\"loadingMessage\" hidden={this.state.loadingMessageHidden}>{this.state.loadingMessage}</div>\n        <canvas ref={this.canvasElement} id=\"canvas\" hidden></canvas>\n        <div id=\"output\">\n          {this.state.outputData ? (\n            <div>\n              <b>Data:</b> <span id=\"outputData\">{this.state.outputData}</span>\n            </div>\n          ) : (\n            <div id=\"outputMessage\">\n              No QR code detected.\n            </div>\n          )}\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}